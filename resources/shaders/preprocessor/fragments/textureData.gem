//? #version 450 core 

struct TextureView {
    int xDelta; 
    int yDelta;
    int wDelta;
    int hDelta;
    int layerDelta;
};

layout(shared, binding = 1) uniform TextureViewData {
    uniform TextureView textureViewTable[128 * 3];
};


struct Texture {
	int textureViewId;
};

layout(shared, binding = 2) uniform TextureData {
    uniform Texture textureTable[128];
};

const int diffuse_unit_index = 0;
const int specular_unit_index = 1;
const int normals_unit_index = 2;


vec3 getTexUnitCoords(sampler2DArray textureLib, vec3 texCoords, TextureView view, int unitIndex) {
    vec2 texWH = textureSize(textureLib, 0).xy;
    return vec3(texCoords.x * (float(view.wDelta) / texWH.x) + float(view.xDelta) / texWH.x, 
                texCoords.y * (float(view.hDelta) / texWH.y) + float(view.yDelta) / texWH.y,
                texCoords.z + view.layerDelta); 
}