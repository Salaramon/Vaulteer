//? #version 450 core 
##[fragments/baseLight.gem] //! #include "baseLight.gem"

const int MAX_POINT_LIGHTS = %%[maxPointLights:int]; //! const int MAX_POINT_LIGHTS = 1;

struct PointLight {
    BaseLight light;
    Attenuation att;
    vec3 position;
    float radius;
};

struct UBPointLight {
    vec3 color;
    float ambientIntensity;
    float diffuseIntensity;
    float aConstant;
    float aLinear;
    float aQuadratic;
    vec3 position;
    float radius;
};

layout(shared, binding = 5) uniform PointLightData {
    uniform UBPointLight pointLightTable[MAX_POINT_LIGHTS];
};

PointLight getPointLight(int pointLightIndex) {
    UBPointLight ubl = pointLightTable[pointLightIndex];
    PointLight l;
    l.light.color = ubl.color;
    l.light.ambientIntensity = ubl.ambientIntensity;
    l.light.diffuseIntensity = ubl.diffuseIntensity;
    l.att.aConstant = ubl.aConstant;
    l.att.aLinear = ubl.aLinear;
    l.att.aQuadratic = ubl.aQuadratic;
    l.position = ubl.position;
    l.radius = ubl.radius;
    return l;
}
