//? #version 450 core 
##[fragments/baseLight.gem] //! #include "baseLight.gem"

const int MAX_DIR_LIGHTS = %%[maxDirLights:int]; //! const int MAX_DIR_LIGHTS = 1;

struct DirectionalLight {
    BaseLight light;
    vec3 direction;
};

struct UBDirectionalLight {
    vec4 color;
    //float ambientIntensity; // packed in color
    //float diffuseIntensity; // packed in direction
    vec4 direction;
};

layout(shared, binding = 4) uniform DirectionalLightData {
    uniform UBDirectionalLight directionalLight[MAX_DIR_LIGHTS];
};

DirectionalLight getDirLight(int i) {
    UBDirectionalLight ubl = directionalLight[i];
    DirectionalLight l;
    l.light.color = vec3(ubl.color.xyz);
    l.light.ambientIntensity = ubl.color.w;
    l.light.diffuseIntensity = ubl.direction.x;
    l.direction = vec3(ubl.direction.yzw);
    return l;
}
